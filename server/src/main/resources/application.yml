spring:
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/music?userSSL=false&userUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: zhn
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM user
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
      filters: stat,wall
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
      # 配置 DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      # 配置 DruidStatViewServlet
      stat-view-servlet:
        url-pattern: /druid/*
        # IP 白名单，没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
#        # IP 黑名单，若白名单也存在，则优先使用
#        deny: 192.168.31.253
        # 禁用 HTML 中 Reset All 按钮
        reset-enable: false
        # 登录用户名/密码
        login-username: root
        login-password: 123
        enabled: true

  # redis配置
  redis:
    # 服务器地址
    host: localhost
    # 端口号
    port: 6379
    # 使用的数据库，默认0号数据库
    database: 1
    # 超时时间
    timeout: 10000ms
    lettuce:
      pool:
        # 最大连接数，默认8
        max-active: 8
        # 最大连接阻塞等待时间，默认-1ms
        max-wait: 10000ms
        # 最大空闲连接，默认8
        max-idle: 200
        # 最小空闲连接，默认0
        min-idle: 5


  # RabbitMQ配置
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin
    virtual-host: /music
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只处理一条消息，处理完再继续下一条消息
        prefetch: 1
        #启动时是否默认启动容器，默认true
        auto-startup: true
        #消息被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间，默认1000ms
        initial-interval: 1000ms
        #重试最大次数，默认3次
        max-attempts: 3
        #重试最大间隔时间，默认10000ms
        max-interval: 10000ms
        #重试的间隔乘数。比如配2.0，第一次就等10s，第二次就等20s，第三次就等40s
        multiplier: 1

  servlet:
    multipart:
      #最大上传单个文件大小：默认1M
      max-file-size: 20MB
      #最大总上传的数据大小:默认10M(对同时上传多个文件大小的限制）
      max-request-size: 40MB

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher


# mybatis-plus配置
mybatis-plus:
  # Mapper.xml映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  # 配置数据返回类型别名
  type-aliases-package: com.rjkf.music.pojo

# mybatis sql打印(方法接口所在的包，不是Mapper.xml所在的包)
logging:
  level:
    com.rjkf.music.pojo: debug
    org.springframework.boot.autocnfigure: ERROR


server:
  port: 8481

